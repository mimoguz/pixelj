# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Attach on Release

on:
  push:
    tags:
      - 'v*'

jobs:

  prepare_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.prepare_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: prepare_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

  build_linux:
    runs-on: ubuntu-latest
    needs: [ prepare_release ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK on Linux
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '18'
        cache: maven
    - name: Build for Linux
      run: mvn -B clean package --file pom.xml
    - name: Attach Linux package without JRE
      id: attach_without_jre_linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_release.outputs.upload_url }}
        asset_path: ./target/pixelj-no-jre-1.0-SNAPSHOT-linux.zip
        asset_name: pixelj-no-jre-1.0-SNAPSHOT-linux.zip
        asset_content_type: application/zip
    - name: Attach Linux package with JRE
      id: attach_with_jre_linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_release.outputs.upload_url }}
        asset_path: ./target/pixelj-1.0-SNAPSHOT-linux.zip
        asset_name: pixelj-1.0-SNAPSHOT-linux.zip
        asset_content_type: application/zip

  build_windows:
    runs-on: windows-latest
    needs: [ prepare_release ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK on Windows
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '18'
        cache: maven
    - name: Build for Windows
      run: mvn -B clean package --file pom.xml
    - name: Attach Windows package without JRE
      id: attach_without_jre_windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_release.outputs.upload_url }}
        asset_path: ./target/pixelj-no-jre-1.0-SNAPSHOT-windows.zip
        asset_name: pixelj-no-jre-1.0-SNAPSHOT-windows.zip
        asset_content_type: application/zip
    - name: Attach Windows package with JRE
      id: attach_with_jre_windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_release.outputs.upload_url }}
        asset_path: ./target/pixelj-1.0-SNAPSHOT-windows.zip
        asset_name: pixelj-SNAPSHOT-windows.zip
        asset_content_type: application/zip
